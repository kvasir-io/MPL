//          Copyright Odin Holmes 2016.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE.md or copy at
//          http://www.boost.org/LICENSE_1_0.txt)
#pragma once

#include "algorithm/all.hpp"
#include "algorithm/any.hpp"
#include "algorithm/combinations.hpp"
#include "algorithm/count_if.hpp"
#include "algorithm/extreme.hpp"
#include "algorithm/filter.hpp"
#include "algorithm/find_if.hpp"
#include "algorithm/flatten.hpp"
#include "algorithm/fold_left.hpp"
#include "algorithm/fold_right.hpp"
#include "algorithm/group.hpp"
#include "algorithm/partition.hpp"
#include "algorithm/product.hpp"
#include "algorithm/remove_adjacent.hpp"
#include "algorithm/remove_if.hpp"
#include "algorithm/replace_if.hpp"
#include "algorithm/reverse.hpp"
#include "algorithm/rotate.hpp"
#include "algorithm/sort.hpp"
#include "algorithm/split_if.hpp"
#include "algorithm/stable_sort.hpp"
#include "algorithm/transform.hpp"
#include "algorithm/zip_with.hpp"

#include "compatability/compatability.hpp"
#include "compatability/dependent_call.hpp"

#include "functional/bind.hpp"
#include "functional/call.hpp"
#include "functional/compose.hpp"
#include "functional/flow.hpp"
#include "functional/fork.hpp"
#include "functional/identity.hpp"

#include "functions/arithmetic/decrement.hpp"
#include "functions/arithmetic/divide.hpp"
#include "functions/arithmetic/increment.hpp"
#include "functions/arithmetic/invert.hpp"
#include "functions/arithmetic/max.hpp"
#include "functions/arithmetic/min.hpp"
#include "functions/arithmetic/minus.hpp"
#include "functions/arithmetic/modulo.hpp"
#include "functions/arithmetic/negate.hpp"
#include "functions/arithmetic/plus.hpp"
#include "functions/arithmetic/times.hpp"
#include "functions/bitwise/bitwise_and.hpp"
#include "functions/bitwise/bitwise_complement.hpp"
#include "functions/bitwise/bitwise_or.hpp"
#include "functions/bitwise/bitwise_xor.hpp"
#include "functions/comparison/equal.hpp"
#include "functions/comparison/greater_than.hpp"
#include "functions/comparison/greater_than_or_equal.hpp"
#include "functions/comparison/less_than.hpp"
#include "functions/comparison/less_than_or_equal.hpp"
#include "functions/comparison/not_equal.hpp"
#include "functions/logical/logical_and.hpp"
#include "functions/logical/logical_not.hpp"
#include "functions/logical/logical_or.hpp"

#include "sequence/at.hpp"
#include "sequence/drop.hpp"
#include "sequence/erase.hpp"
#include "sequence/front.hpp"
#include "sequence/insert.hpp"
#include "sequence/is_list.hpp"
#include "sequence/join.hpp"
#include "sequence/lookup.hpp"
#include "sequence/pop_front.hpp"
#include "sequence/make_sequence.hpp"
#include "sequence/push_back.hpp"
#include "sequence/push_front.hpp"
#include "sequence/size.hpp"
#include "sequence/take.hpp"

#include "types/bool.hpp"
#include "types/int.hpp"
#include "types/integral_constant.hpp"
#include "types/list.hpp"
#include "types/nothing.hpp"
#include "types/traits.hpp"

#include "utility/always.hpp"
#include "utility/conditional.hpp"
#include "utility/is_instance.hpp"
#include "utility/same_as.hpp"
